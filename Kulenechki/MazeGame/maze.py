import pygame
import sys
import random

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
pygame.init()

# –†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
SCREEN_WIDTH = 128
SCREEN_HEIGHT = 160
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

# –ù–∞–∑–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
pygame.display.set_caption("Echo Maze")

# –ß–∞—Å—Ç–æ—Ç–∞ –∫–∞–¥—Ä–æ–≤
clock = pygame.time.Clock()
FPS = 30

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–º–∞–π–ª–∏–∫–∞
player_img = pygame.font.SysFont('Arial', 20).render('üòä', True, (255, 255, 255))
player_rect = player_img.get_rect()

# –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞
player_rect.x = SCREEN_WIDTH // 2
player_rect.y = SCREEN_HEIGHT - 30

# –°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
maze = []
maze_width = 50
maze_height = 50
for y in range(maze_height):
    row = []
    for x in range(maze_width):
        if random.random() < 0.2:
            row.append(1)  # –°—Ç–µ–Ω–∞
        else:
            row.append(0)  # –ü—É—Å—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    maze.append(row)

# –ì—Ä–∞–Ω–∏—Ü—ã –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
for x in range(maze_width):
    maze[0][x] = 1
    maze[maze_height - 1][x] = 1
for y in range(maze_height):
    maze[y][0] = 1
    maze[y][maze_width - 1] = 1

# –†–∞–∑–º–µ—Ä –∫–ª–µ—Ç–∫–∏
CELL_SIZE = 10

# –í–∏–¥–∏–º–æ—Å—Ç—å (False - —Ç–µ–º–Ω–æ—Ç–∞, True - –≤–∏–¥–∏–º–æ)
visibility = [[False for _ in range(maze_width)] for _ in range(maze_height)]

# –ó–≤—É–∫
echo_sound = pygame.mixer.Sound('echo.wav')

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
def draw_maze():
    for y in range(maze_height):
        for x in range(maze_width):
            if visibility[y][x]:
                rect = pygame.Rect(x * CELL_SIZE - camera_x, y * CELL_SIZE - camera_y, CELL_SIZE, CELL_SIZE)
                if maze[y][x] == 1:
                    pygame.draw.rect(screen, (200, 200, 200), rect)
                else:
                    pygame.draw.rect(screen, (50, 50, 50), rect)

# –ö–∞–º–µ—Ä–∞
camera_x = 0
camera_y = 0

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –∏–≥—Ä—ã
while True:
    screen.fill((0, 0, 0))  # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    keys = pygame.key.get_pressed()

    # –î–≤–∏–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    if keys[pygame.K_LEFT]:
        player_rect.x -= 2
    if keys[pygame.K_RIGHT]:
        player_rect.x += 2
    if keys[pygame.K_UP]:
        player_rect.y -= 2
    if keys[pygame.K_DOWN]:
        player_rect.y += 2

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –≥—Ä–∞–Ω–∏—Ü–∞–º —ç–∫—Ä–∞–Ω–∞
    player_rect.x = max(0, min(player_rect.x, SCREEN_WIDTH - player_rect.width))
    player_rect.y = max(0, min(player_rect.y, SCREEN_HEIGHT - player_rect.height))

    # –≠—Ö–æ–ª–æ–∫–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø—Ä–æ–±–µ–ª–∞
    if keys[pygame.K_SPACE]:
        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
        echo_sound.play()

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–ª–µ—Ç–æ–∫ –≤–æ–∫—Ä—É–≥ –∏–≥—Ä–æ–∫–∞
        player_cell_x = (player_rect.x + camera_x) // CELL_SIZE
        player_cell_y = (player_rect.y + camera_y) // CELL_SIZE
        for y in range(-5, 6):
            for x in range(-5, 6):
                cell_x = player_cell_x + x
                cell_y = player_cell_y + y
                if 0 <= cell_x < maze_width and 0 <= cell_y < maze_height:
                    visibility[cell_y][cell_x] = True

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã
    camera_x = player_rect.x - SCREEN_WIDTH // 2 + player_rect.width // 2
    camera_y = player_rect.y - SCREEN_HEIGHT // 2 + player_rect.height // 2

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
    draw_maze()

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    screen.blit(player_img, (player_rect.x, player_rect.y))

    pygame.display.flip()
    clock.tick(FPS)

